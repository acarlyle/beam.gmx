<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dialogueTrigger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activated = false;
isPuzzleElement = false;
message = "";

//write your messages in an array, starting at 0, like so
//message[0] = "PLEASE WAIT PATIENTLY";
//message[1] = "WHILE I SYNC OUR LOVE PACKETS";
//message[2] = "UPLINK COMPLETE";
//message[3] = "WE MOVE AS ONE";

message_current = 0; //0 is the first number in our array, and the message we are currently at
message_end = 3; //6 is the last number in our array
message_draw = ""; //this is what we 'write' out. It's blank right now
increase = 0.5; //the speed at which new characters are added
characters = 0; //how many characters have already been drawn
hold = 0; //if we hold 'Z', the text will render faster

//message_length = string_length(message[message_current]); //get the number of characters in the first message
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
//draw_text_colour(100, 200, string(health), c_lime, c_lime, c_green, c_green, 1);
//display_set_gui_size(global.WINDOW_WIDTH * global.set_phoneRes * global.set_scaleRes, 
//                     global.WINDOW_HEIGHT * global.set_phoneRes * global.set_scaleRes);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (activated){
    //print("activated");
    if (characters &lt; message_length) { //if current character count is less than the amount in current message* 
        hold = keyboard_check(ord("Z")); //hold is true or false if we hold 'Z' or not
        characters += increase * (1 + hold); //increase speed based on hold
        message_draw = string_copy(message[message_current], 0, characters); //copy string to current character
    } 
    else { //if current character is more than the amount in the current message
        if (keyboard_check_pressed(ord("Z"))) { //if we press Z...
            if (message_current &lt; message_end) { //if there are more messages left to show (0 -&gt; 6, in our case)
                message_current += 1; //increase the message by 1
                message_length = string_length(message[message_current]);  //get the new character length for message
                characters = 0; //set the characters back to 0
                message_draw = ""; //clear the drawn text
            }
            else { //if our messages are done (we reach 6, in our case)...
                instance_destroy(); //destroy the object
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/**draw_text_transformed((obj_player.x + global.TILE_SIZE/2) * global.set_phoneRes * global.set_scaleRes, 
                      (obj_player.y - global.TILE_SIZE/4) * global.set_phoneRes * global.set_scaleRes, 
                      message_draw, 
                      1, 
                      1, 
                      0);*/
draw_text_transformed_colour((obj_player.x + global.TILE_SIZE/2) * global.set_phoneRes * global.set_scaleRes, 
                                 (obj_player.y - global.TILE_SIZE/4) * global.set_phoneRes * global.set_scaleRes, 
                                  message_draw, 
                                  1.5,
                                  1.5,
                                  0,
                                  c_red, 
                                  c_red, 
                                  c_red, 
                                  c_red,
                                  1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
